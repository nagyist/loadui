<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="soapUI-loadUI-plugin" resourceRoot="" soapui-version="5.0.0-beta" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="TestSuite 1"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="TestCase 1"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="DummyREST" type="rest" basePath="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://127.0.0.1:8087</con:endpoint></con:endpoints><con:resource name="Movie" path="/movie"><con:settings/><con:parameters><con:parameter><con:name>movie</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters><con:parameter><con:name>movie</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>http://127.0.0.1:8086</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="movie" value="Tom" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource></con:interface><con:testSuite name="TestSuite 1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true" id="b667904b-08ca-4a0d-b004-51158891f611"><con:settings/><con:testStep type="groovy" name="Do Nothing"><con:settings/><con:config><script/></con:config></con:testStep><con:properties><con:property><con:name>myProperty</con:name><con:value>notChanged</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 2" searchProperties="true" id="8c1114d5-06b8-45ed-aed1-dfe740bb6ac0" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Start MockService"><con:settings/><con:config><script>synchronized( testRunner.testCase.testSuite.project )
{
	if( !testRunner.testCase.testSuite.project.hasProperty( "mockStarted" ) )
	{
		def runner = testRunner.testCase.testSuite.project.mockServices["CyclicBarrier"].start()
		context.mockRunner = runner
		testRunner.testCase.testSuite.project.setPropertyValue("mockStarted", "true")
	}
}</script></con:config></con:testStep><con:testStep type="httprequest" name="HTTP Test Request"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="HTTP Test Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://127.0.0.1:8085</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Stop MockService"><con:settings/><con:config><script>if( context.containsKey("mockRunner") )
	context.mockRunner.stop()</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 3" searchProperties="true" id="74189dfc-1258-4cc7-96b1-033931366bc8" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Start MockService"><con:settings/><con:config><script>def runner = testRunner.testCase.testSuite.project.mockServices["DummyMock"].start()
context.mockRunner = runner</script></con:config></con:testStep><con:testStep type="httprequest" name="HTTP Test Request" id="42dadbd2-a88d-4561-af57-fbd0f76dd3f2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="HTTP Test Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://127.0.0.1:8086</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert false</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Stop MockService"><con:settings/><con:config><script>context.mockRunner.stop()</script></con:config></con:testStep><con:properties><con:property><con:name>someProperty</con:name><con:value>foo</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>42dadbd2-a88d-4561-af57-fbd0f76dd3f2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 4" searchProperties="true" id="060402b5-b55d-42c6-8992-7aa60033dae7"><con:settings/><con:testStep type="groovy" name="Step1"><con:settings/><con:config><script>testRunner.testCase.setPropertyValue("changedLastBy", "Step1")</script></con:config></con:testStep><con:testStep type="groovy" name="Step2" disabled="true"><con:settings/><con:config><script>testRunner.testCase.setPropertyValue("changedLastBy", "Step2")</script></con:config></con:testStep><con:testStep type="groovy" name="Do Nothing"><con:settings/><con:config><script/></con:config></con:testStep><con:properties><con:property><con:name>changedLastBy</con:name><con:value>never</con:value></con:property><con:property><con:name>hasBeenOverridden</con:name><con:value>false</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 5" searchProperties="true" id="84ce711c-ed96-4da2-863c-10438d8059e3" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Start MockService"><con:settings/><con:config><script>def runner = testRunner.testCase.testSuite.project.mockServices["DummyMock"].start()
context.mockRunner = runner</script></con:config></con:testStep><con:testStep type="httprequest" name="HTTP Test Request"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="HTTP Test Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://127.0.0.1:8086</con:endpoint><con:request/><con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Stop MockService"><con:settings/><con:config><script>context.mockRunner.stop()</script></con:config></con:testStep><con:properties><con:property><con:name>someProperty</con:name><con:value>foo</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>42dadbd2-a88d-4561-af57-fbd0f76dd3f2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 6" searchProperties="true" id="c0055ee5-bd96-4124-8132-2a222c2489ad" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Start MockService" id="98ca7b8a-3d92-4b8b-8755-a9238766e907"><con:settings/><con:config><script>def runner = testRunner.testCase.testSuite.project.mockServices["RESTMock"].start()
context.mockRunner = runner</script></con:config></con:testStep><con:testStep type="restrequest" name="REST Test Request" id="720d0af8-2c77-4544-ab27-11411f3ce32d"><con:settings/><con:config service="DummyREST" resourcePath="/movie" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Test Request" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://127.0.0.1:8087</con:endpoint><con:request/><con:assertion type="Invalid HTTP Status Codes" name="Invalid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="movie" value="Tom &amp; Jerry" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Stop MockService"><con:settings/><con:config><script>context.mockRunner.stop()</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>98ca7b8a-3d92-4b8b-8755-a9238766e907</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>720d0af8-2c77-4544-ab27-11411f3ce32d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 7" searchProperties="true" id="3e675e6d-f013-4ead-b8e7-bfe82cc4e7e4"><con:settings/><con:testStep type="groovy" name="Start MockService" id="b4cbae82-dc8f-44c3-bd1b-e0b85085e6a1"><con:settings/><con:config><script>def runner = testRunner.testCase.testSuite.project.mockServices["RESTMock"].start()
context.mockRunner = runner</script></con:config></con:testStep><con:testStep type="httprequest" name="HTTP Test Request"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="HTTP Test Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://127.0.0.1:8087</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>myTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>HTTP Test Request</con:sourceStep><con:sourcePath>//rootNode[1]/subNode[1]</con:sourcePath><con:targetType>myTestCaseProperty</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Stop MockService"><con:settings/><con:config><script>context.mockRunner.stop()</script></con:config></con:testStep><con:properties><con:property><con:name>myTestCaseProperty</con:name><con:value>response value</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>b4cbae82-dc8f-44c3-bd1b-e0b85085e6a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:mockService port="8085" path="/" host="Henrik-PC" name="CyclicBarrier" bindToHostOnly="false" docroot=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:startScript>import java.util.concurrent.CyclicBarrier

context.barrier = new CyclicBarrier( 10 )
</con:startScript><con:properties/><con:onRequestScript>// rendevouz 10 requests here, to see if soapUI can run 10 concurrent requests w/o queuing them (the bug that motivated 2.0.1)
System.out.println("GOT TO BARRIER")
context.barrier.await()</con:onRequestScript></con:mockService><con:mockService port="8086" path="/" host="Henrik-PC" name="DummyMock" bindToHostOnly="false" docroot=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:startScript/><con:properties/><con:onRequestScript>import javax.servlet.http.Cookie

if( !mockRequest.httpRequest.cookies )
{
	mockRequest.httpResponse.addCookie( new Cookie("myNewCookie", "myCookieValue") )
}
else
	mockRequest.httpResponse.setStatus( 400 )</con:onRequestScript></con:mockService><con:mockService port="8087" path="/" host="Henrik-PC" name="RESTMock" bindToHostOnly="false" docroot=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:startScript/><con:properties/><con:onRequestScript>if( mockRequest.httpRequest.queryString?.contains('&amp;') )
	mockRequest.httpResponse.setStatus( 400 )
else
{
	mockRequest.httpResponse.setStatus( 200 )
	def responseFile = File.createTempFile( 'response', 'tmp' )
	responseFile.append( '&lt;rootNode>&lt;subNode>response value&lt;/subNode>&lt;/rootNode>' )
	mockRunner.dispatcher.returnFile( mockRequest.httpResponse, responseFile )
	return new com.eviware.soapui.impl.wsdl.mock.WsdlMockResult( mockRequest )
}</con:onRequestScript></con:mockService><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>